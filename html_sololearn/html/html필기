Metadata: 나머지 내용의 표시 또는 동작을 설정하는 내용입니다. 이러한 요소는 문서의 머리 부분에 있습니다.
Elements: <base>, <link>, <meta>, <noscript>, <script>, <style>, <title>

Embedded: 문서로 다른 리소스를 가져오는 내용.
Elements: <audio>, <video>, <canvas>, <iframe>, <img>, <math>, <object>, <svg>

Interactive: 사용자 상호 작용을 위한 콘텐츠입니다.
요소: <a>, <audio>, <video>, <button>, <details>, <embed>, <iframe>, <input>, <label>, <object>, <select>, <text area>

Heading: 섹션 헤더를 정의합니다.
요소: <h1>, <h2>, <h3>, <h4>, <h5>, <h6>, <hgroup>

Phrasing: 이 모델에는 HTML4와 공통적으로 많은 인라인 레벨 요소가 있습니다.
요소: <img>, <span>, <strong>, <label>, <br />, <small>, <sub> 등.


흐름 내용: 문서의 일반 흐름에 포함될 HTML5 요소의 대부분을 포함합니다.

Flow content: 제목, 내용, 탐색 및 바닥글의 범위를 정의합니다.
Elements: <article>, <aside>, <nav>, <section> 


footer가 보여주는 정보
- 연락처 정보
- 개인 정보 보호 정책
- 소셜 미디어 아이콘
- 서비스 약관
- 저작권 정보
- 사이트맵 및 관련 문서


localStorage() vs sessionStorage
공통적으로 두 저장소 모두 웹 서버에서만 사용할 수 있다.
또한 쿠키보다 더 많은 정보를 저장할 수 있다.
차이점은 데이터의 영구성에 있다.
로컬스토리지는 사용자가 지우지 않는 이상 데이터가 보관된다.
또한 같은 URL에서 모든 창, 탭에서 데이터가 공유된다.
세션스토리지는 사용자가 브라우저를 종료하면 데이터가 삭제된다.
또한 같은 URL이라도 그 탭에서만 데이터를 사용할 수 있다.
localStorage의 사용법
 - localStorage.setItem("key1", "value1") - 데이터 저장
 - localStorage.getItem("key1") - 데이터 로드
 - localStorage.removeItem("key1") - 데이터 삭제
 - localStorage.clear() - 데이터 전부 삭제
sessionStorage의 사용법
 - sessionStorage.setItem("name", "본인 이름");
 - sessionStorage.getItem("name");


html5의 Geolocation API는 사용자의 위치정보를 알 수 있다.
Geolocation 메서드
showLocation (필수): 위치 정보를 검색하는 콜백 메서드를 정의합니다.
ErrorHandler(옵션): 비동기 호출을 처리하는 동안 오류가 발생할 때 호출되는 콜백 메서드를 정의합니다.
Options (옵션): 위치 정보를 검색하는 옵션 집합을 정의합니다.
사용법
navigator.Geolocation.(메서드)


SVG
그리기 도구로 그림, 원, 박스, 글자, 이미지를 쉽게 만들 수 있는 메서드를 가지고 있다.
1) 사각형 : <rect>
2) 정원 : <circle>
3) 타원 : <ellipse>
4) 선 : <line>
5) 다각선 : <polyline>
6) 다각형 : <polygon>
7) 패스 : <path>
사용법
<svg width="" height="">
    <위 태그(자세한 내용은 구글링)/>
</svg>
Shape Animations
svg 태그로 만든 도형에 애니메이션을 첨가한다
속성
attributeName: 애니메이션의 영향을 받을 특성을 지정합니다.
from: 속성의 시작 값을 지정합니다.
to: 속성의 끝 값을 지정합니다.
dur: 애니메이션 실행 시간(기간)을 지정합니다.
fill: 애니메이션이 완료될 때 속성 값이 초기 값으로 돌아갈지 여부를 지정합니다(값: "remove"는 값을 재설정하고, "freeze"은 "지정 값"을 유지합니다).
repeatCount: 애니메이션의 반복 횟수를 지정합니다.
사용법
<svg>
    <태그>
        <animate 각 속성을 알맞게 설정/>
    </태그>
</svg>
paths
경로를 정의하는데에 사용된다
M: 이동
L: 라네토
H: 수평 선로
V: 수직 라인세토
C: 곡선으로
S: 부드러운 곡선
Q: 2차 베지어 곡선
T: 매끄러운 2차 베지어 곡선
A: 타원형 호
Z: 근접 경로
사용법
<path d="M 0 0 L200 200 L200 0 Z" style="stroke:#000; fill:node;"/>
태그안에 d=""안에 순서대로 기입한다.

canvas
화면안에 상자를 넣을 수 있다. 여기서 상자의 색, 크기는 js로 결정한다.
사용법
 var can = document.getElementById("(캔버스 태그 id)"); 
      var ctx = can.getContext("2d");

      ctx.fillStyle = "rgb(20,50,90)"; 색 지정
      ctx.fillRect(100,100,100,100) 크기,위치 지정

canvas vs svg
canvas
- 요소는 프로그래밍 방식으로 그려집니다.
- 픽셀로 그림을 그립니다.
- 애니메이션이 내장되어 있지 않습니다.
- 픽셀 기반 그리기 작업을 위한 고성능
- 해상도에 따라 다름
- 이벤트 핸들러 지원 없음
- 결과 이미지를 .png 또는 .jpg로 저장할 수 있습니다.
- 그래픽 집약적인 게임에 적합합니다.
- 글자도 그릴 수 있다(fillText)

SVG
- 요소는 페이지의 DOM(문서 오브젝트 모델)의 일부입니다.
- 벡터로 그림을 그립니다.
- 애니메이션 등의 효과 내장
- 접근성 향상 표준 XML 구문 기반
- 해상도 독립
- 이벤트 핸들러 지원
- 게임 애플리케이션에는 적합하지 않음
- 렌더링 영역이 넓은 애플리케이션(예: Google Maps)에 적합합니다.

html5에서 사용할 수 있는 input types
- color
- date
- datetime
- datetime-local
- email
- month
- number
- range
- search
- tel
- time
- url
- week

html5에서 사용할 수 있는 input attributeName
- autofocus
- form
- formaction
- formenctype
- formmethod
- formnovalidate
- formtarget
- height and width
- list
- min and max
- multiple
- pattern (regexp)
- placeholder
- required
- step

